{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xiaom\\\\Documents\\\\vscode\\\\native\\\\uber-clone\\\\screens\\\\HomeScreen.js\",\n    _templateObject,\n    _templateObject2;\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport tw from 'tailwind-react-native-classnames';\nimport NavOptions from \"../components/NavOptions\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\n\nvar HomeScreen = function HomeScreen() {\n  var dispatch = useDispatch();\n  return React.createElement(SafeAreaView, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"bg-white h-full\"]))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"p-5\"]))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 100,\n      height: 100,\n      resizeMode: 'contain'\n    },\n    source: {\n      uri: \"https://links.papareact.com/gzs\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), React.createElement(GooglePlacesAutocomplete, {\n    placeholder: \"\\u041E\\u0442 \\u043A\\u0443\\u0434\\u0430?\",\n    styles: {\n      container: {\n        flex: 0\n      },\n      textInput: {\n        fontSize: 18\n      }\n    },\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(data);\n      console.log(details);\n    },\n    fetchDetails: true,\n    requestKeyType: \"search\",\n    enablePoweredByContainer: false,\n    minLength: 2,\n    query: {\n      key: \"AIzaSyBGKazyEQJeQKDWOqbdTMKeGZ7w8H9uVV0\",\n      language: \"en-AU\"\n    },\n    nearbyPlacesAPI: \"GooglePlacesSearch\",\n    debounce: 400,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(NavOptions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  text: {\n    color: 'blue'\n  }\n});","map":{"version":3,"sources":["C:/Users/xiaom/Documents/vscode/native/uber-clone/screens/HomeScreen.js"],"names":["React","tw","NavOptions","GooglePlacesAutocomplete","HomeScreen","dispatch","useDispatch","width","height","resizeMode","uri","container","flex","textInput","fontSize","data","details","console","log","key","language","styles","StyleSheet","create","text","color"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,OAAOC,EAAP,MAAe,kCAAf;AACA,OAAOC,UAAP;AACA,SAASC,wBAAT,QAAyC,yCAAzC;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;AAEA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEL,EAAF,yFAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,EAAF,+EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAAE,GADF;AACOC,MAAAA,MAAM,EAAE,GADf;AACoBC,MAAAA,UAAU,EAAE;AADhC,KADT;AAIE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE;AADC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,wBAAD;AACE,IAAA,WAAW,EAAC,wCADd;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE;AADG,OADL;AAINC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AADD;AAJL,KAFV;AAUE,IAAA,OAAO,EAAE,iBAACC,IAAD,EAA0B;AAAA,UAAnBC,OAAmB,uEAAT,IAAS;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAbH;AAcE,IAAA,YAAY,EAAE,IAdhB;AAeE,IAAA,cAAc,EAAE,QAflB;AAgBE,IAAA,wBAAwB,EAAE,KAhB5B;AAiBE,IAAA,SAAS,EAAE,CAjBb;AAkBE,IAAA,KAAK,EAAE;AACLG,MAAAA,GAAG,2CADE;AAELC,MAAAA,QAAQ,EAAE;AAFL,KAlBT;AAsBE,IAAA,eAAe,EAAC,oBAtBlB;AAuBE,IAAA,QAAQ,EAAE,GAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAqCE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CADF,CADF;AA2CD,CA9CD;;AAgDA,eAAehB,UAAf;AAEA,IAAMiB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, SafeAreaView, Image } from 'react-native';\r\n\r\nimport tw from 'tailwind-react-native-classnames';\r\nimport NavOptions from '../components/NavOptions';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\nimport { GOOGLE_MAPS_APIKEY } from '@env';\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <SafeAreaView style={tw`bg-white h-full`}>\r\n      <View style={tw`p-5`}>\r\n        <Image \r\n          style={{\r\n            width: 100, height: 100, resizeMode: 'contain',\r\n          }} \r\n          source={{\r\n            uri: \"https://links.papareact.com/gzs\",\r\n\r\n          }}\r\n        />\r\n\r\n        <GooglePlacesAutocomplete\r\n          placeholder=\"От куда?\"\r\n          styles={{\r\n            container: {\r\n              flex: 0,\r\n            },\r\n            textInput: {\r\n              fontSize: 18,\r\n            },\r\n          }}\r\n          onPress={(data, details = null) => {\r\n            console.log(data);\r\n            console.log(details);\r\n          }}\r\n          fetchDetails={true}\r\n          requestKeyType={\"search\"}\r\n          enablePoweredByContainer={false}\r\n          minLength={2}\r\n          query={{\r\n            key: GOOGLE_MAPS_APIKEY,\r\n            language: \"en-AU\",\r\n          }}\r\n          nearbyPlacesAPI=\"GooglePlacesSearch\"\r\n          debounce={400}\r\n        />\r\n\r\n        <NavOptions />\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    color: 'blue',\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}